# Dunst Config File
# Cami Carballo
# LAST EDIT: 16 September 2018

[global]
    font = Ubuntu Mono 12
    markup = no

    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    format = "%s >> %b"

    #sort messages by urgency
    sort = yes

    #show how many messages are currently hidden
    indicate_hidden = yes

    #alignment of message text
    # "left", "center" and "right"
    alignment = left

    # frequency with which text that is longer than the notification
    # window allows bounces back and forth
    # -- conflicts with word_wrap 
    # disable with 0
    bounce_freq = 0

    # show age of message if message older than threshold seconds
    show_age_threshold = 10

    # split notifications into multiple lines if they don't fit
    word_wrap = yes

    # ignore newlines in notifications
    ignore_newline = yes

	# the geometry of the window
	# geometry [{width}]x{height}][+/-{x}+/-{y}]
	# The geometry of the message window.
	# The height is measured in number of notifications everything else in pixels. If the width
	# is omitted but the height is given ("-geometry x2"), the message window
	# expands over the whole screen (dmenu-like). If width is 0,
	# the window expands to the longest message displayed.
	# A positive x is measured from the left, a negative from the
	# right side of the screen.  Y is measured from the top and down respectevly.
	# The width can be negative. In this case the actual width is the
    # screen width minus the width defined in within the geometry option.
    geometry = "x2"

    # transparency of the window
    # range: [0, 100]
    # only works with compositing windowmanager
    transparency = 0

    # don't remove messages if the user is idle
    # for longer than threshold seconds
    # disable with 0
    idle_threshold = 0

    # which monitor the notifications should be displayed on
    monitor = 0

	# Display notification on focused monitor. Possible modes are:
	# mouse: follow mouse pointer
	# keyboard: follow window with keyboard focus
	# none: don't follow anything
	# If this option is set to mouse or keyboard, the monitor option will be
    # ignored.
    follow = mouse

	# should a notification popped up from history be sticky or
    # timeout as if it would normally do.
    sticky_history = no

	# The height of a single line. If the height is smaller than the font height,
	# it will get raised to the font height.
    # This adds empty space above and under the text.
    line_height = 0

	# Draw a line of 'separatpr_height' pixel height between two notifications.
    # Set to 0 to disable
    separator_height = 0

    # padding between text and separator
    padding = 0

    # horizontal padding
    horizontal_padding = 8

	# Define a color for the separator.
	# possible values are:
	#  * auto: dunst tries to find a color fitting to the background
	#  * foreground: use the same color as the foreground
	#  * frame: use the same color as the frame.
    # * anything else will be interpreted as a X color
    separator_color = frame

	# print a notification on startup
	# This is mainly for error detection, since dbus (re-)starts dunst
    # automatically after a crash.
    startup_notification = false

    # dmenu path
    dmenu = /usr/bin/dmenu -p dunst:

    # browser for opening urls in context menu
    browser = /usr/bin/firefox -new-tab

    stack_duplicates = true
    title = Dunst
    class = Dunst

    frame_width = 2
    frame_color = "#000000"

[urgency_low]
    background = "#000000"
    foreground = "#FFFFFF"
    timeout = 7

[urgency_normal]
    background = "#000000"
    foreground = "#FFFFFF"
    timeout = 7

[urgency_critical]
    background = "#000000"
    foreground = "#FFFFFF"
    timeout = 0


# Every section that isn't one of the above is interpreted as a rules
# to override settings for certain messages.
# Messages can be matched by 'appname', 'summary', 'body' or 'icon'
# and you can override the 'timeout', 'urgency', 'foreground', 'background'
# and 'format'.
# Shell-like globbing will get expanded.
#
# SCRIPTING
# you can specify a script that gets run when the rule matches by setting
# the 'script' option.
# The script will be called as follows:
# script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format to ""
# NOTE: It might be helpful to run dunst -print in a terminal in order to find
# fitting options for rules.

[slack]
    appname = "slack"
    format = " %s >> %b"
    urgency = normal

[signal]
    appname = "signal-desktop"
    format = " %s >> %b"
    urgency = normal

[signal2]
    appname = "electron"
    format = " %s -- %b"
    urgency = normal

#[firefox]
#  appname = "Firefox"
#  format = "%s  %b  "
#  urgency = normal

#[power]
#  appname = "power"
#  format = "  %s"
#  urgency = normal
